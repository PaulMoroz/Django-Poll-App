pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Install Dependencies') {
            steps {
                sh 'pip3 install -r requirements.txt'
            }
        }

        stage('Testing') {
            steps {
                sh 'python3 manage.py test' 
            }
        }
        stage('Logging in the AWS'){
            steps {
                sh 'export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}'
                sh 'export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}'
                sh 'export AWS_REGION=${AWS_REGION}'

            }
        }
        stage('Pushing docker to Container registry'){
            steps {
                sh 'aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/k0i2k3v4' 
                sh 'docker build -t django-poll-app .'
                sh 'docker tag django-poll-app:latest public.ecr.aws/k0i2k3v4/django-poll-app:latest' 
                sh 'docker push public.ecr.aws/k0i2k3v4/django-poll-app:latest' 
            }
        }

        stage('Removing built containers'){
            steps{
                sh "docker rmi -f \$(docker images -q)"
            }
        }
        
        stage('Restart the service'){
            steps{
                sh "nohup aws ecs update-service --cluster django-cluster-2 --service Django-poll-app-service --region eu-central-1 --force-new-deployment > /dev/null 2>&1 &"
            }
        }
    }

}
